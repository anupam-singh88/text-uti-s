{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","text2","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d2c1a5a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a, a} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <a className=\"nav-a active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </a> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" to=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn- primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  aboutText: \"About \",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    // setText(\"you have clicked on handle Click\");\r\n    props.showAlert(\"converted to upper case\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lower case\", \"success\");\r\n    // setText(\"you have clicked on handle Click\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onchnege\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleClearClick = (event) => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    var text2 = document.getElementById(\"myBox\");\r\n    // console.log(text2);\r\n    text2.select();\r\n    // text.select();\r\n    // text2.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text2.value);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n  const handExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces removed\", \"success\");\r\n  };\r\n  // const [text, setText] = useState(\"Enter SOme Text\");\r\n  const [text, setText] = useState(\"\");\r\n  //   text = \"new text\"; //worng way\r\n  //   setText(\"dfsadsaf\"); correct way\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"042743\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{\r\n            color: props.mode === \"dark\" ? \"white\" : \"042743\",\r\n          }}\r\n        >\r\n          <textarea\r\n            id=\"myBox\"\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"042743\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={handleLoClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={handleClearClick}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={handExtraSpaces}>\r\n          Remove Extra space\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} 452343 charecters\r\n        </p>\r\n        <p>{0.08 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something in the text box\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from './components/About';\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enble or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title='Text Utils - Dark Mode';\n      // setInterval(()=>{\n      //   document.title='Text Utils is Amazing Mode';\n      // },2000);\n      // setInterval(()=>{\n      //   document.title='Text Utils Hppa';\n      // },1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title='Text Utils - Light Mode';\n\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Navbar title=\"TextUtils2\" aboutText=\"About Us\" /> */}\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            \n        <TextForm\n          heading=\"Enter the text to analyze below \"\n          mode={mode}\n          showAlert={showAlert}\n        />\n          {/* </Route> */}\n          {/* <Route path=\"/\">\n            <Home />\n          </Route> */}\n      {/* </Switch> */}\n        {/* <About /> */}\n      </div>\n   {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}